/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id("multiproject.kotlin-application-conventions")
}

dependencies {
    implementation(project(":lib"))
    implementation("io.insert-koin:koin-core:3.3.3")
}

application {
    // Define the main class for the application.
    mainClass.set("multiproject.client.AppKt")
}



tasks {
    val mkjar = register<Jar>("mkjar") {
        dependsOn.addAll(listOf("compileJava", "compileKotlin", "processResources", ":lib:jar"))
        archiveClassifier.set("standalone")
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        manifest { attributes(mapOf("Main-Class" to application.mainClass)) }
        val sourcesMain = sourceSets.main.get()
        val contents = configurations.runtimeClasspath.get()
            .map { if (it.isDirectory) it else zipTree(it) } +
                sourcesMain.output
        from(contents)
    }
    build {
        dependsOn(mkjar)
    }
}

tasks.named<JavaExec>("run") {
    standardInput = System.`in`
}